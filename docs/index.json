[{"content":"これは工研ブログリレー2022の10日目の記事です。 9日の記事はもっちゃんさんの電気通信大学で生き残るための序盤の布石です。UECサバイバルでのテクニックが書いてあるのでぜひご一読を。\nさて、私は最近微積分で覚えるといいかもしれない公式などというのを書いたのですが、そこで関数のグラフを描くのにRを使ってみたのでそのことについて書いていこうと思います。なぜRを使ったのかというと、なんとなくです。特に理由はないですね。\n3日目の記事と若干ネタ被りしちゃいました\u0026hellip;ごめんなさい\u0026hellip;\nちなみに筆者はR初心者なので何か間違ってることなどがあったらTwitterなどで連絡してくださるとうれしいです。\nやったことの要約 Rと統合開発環境であるRStudioはインストール済みであることを想定しています。 RStudio上で以下を入力していく。\ninstall.packages(\u0026#34;tidyverse\u0026#34;) #以前一回でも実行したことがあるのなら不要 library(ggplot2) #library(tidyverse) でもよい library(patchwork) #複数のグラフを並べて表示する用  g1 \u0026lt;- ggplot(data.frame(x=c(-3,3))) + aes(x) + stat_function(fun=function(x) sinh(x)) + coord_cartesian(ylim = c(-3,3)) + labs(title = \u0026#34;sinh(x)\u0026#34;) + theme_linedraw(base_family = \u0026#34;Times New Roman\u0026#34;) g2 \u0026lt;- ggplot(data.frame(x=c(-3,3))) + aes(x) + stat_function(fun=function(x) cosh(x)) + coord_cartesian(ylim = c(0,6)) + labs(title = \u0026#34;cosh(x)\u0026#34;) + theme_linedraw(base_family = \u0026#34;Times New Roman\u0026#34;) g3 \u0026lt;- ggplot(data.frame(x=c(-3,3))) + aes(x) + stat_function(fun=function(x) tanh(x)) + coord_cartesian(ylim = c(-3,3)) + labs(title = \u0026#34;tanh(x)\u0026#34;) + theme_linedraw(base_family = \u0026#34;Times New Roman\u0026#34;)  g1|g2|g3 ※そのままでも問題ないかもしれませんが、グラフの表示のためにRStudioのメニューから「Tools」→「Global Options」を押して「General」内の「Graphics」でBacendをAGGにしておくとよいかもしれません。\n以下のような画面になっているはず。\n右下のグラフが表示されているところにあるExportからSave as imageを選ぶとグラフの画像を保存できます。\nggplot2パッケージについて 今回グラフを作っていくにあたってggplot2というパッケージを使いました。このggplot2というのは関数の結果を1つずつ+演算子によってレイヤとして重ねていくという文法をとるようです。上でも「gplot(\u0026hellip;) + aes(\u0026hellip;) + \u0026hellip; 」となってますね。上でできたグラフにさらにいろいろしたいときには+で関数を足せばよさそうです。\nそれぞれの関数についてちょこっとだけ説明を書いときます。\nggplot(\u0026hellip;) この関数でグラフに使うデータフレームを指定します。\naes(\u0026hellip;) データフレームから列を選びx軸やy軸に割り当てます。\nstat_function(\u0026hellip;) fun=で関数を指定することができます。\nggplot(data.frame(x=c(-3,3))) + aes(x) + stat_function(fun=function(x) sinh(x)) という風にすると以下のようなグラフになります。\ncoord_cartesian(\u0026hellip;) 表示範囲を制限することができます。\nggplot(data.frame(x=c(-3,3))) + aes(x) + stat_function(fun=function(x) sinh(x)) + coord_cartesian(ylim = c(-3,3)) labs(\u0026hellip;) 軸のラベルを変更したりタイトルを設定したりできます。\nggplot(data.frame(x=c(-3,3))) + aes(x) + stat_function(fun=function(x) sinh(x)) + coord_cartesian(ylim = c(-3,3)) + labs(title = \u0026#34;sinh(x)\u0026#34;) theme_linedraw(\u0026hellip;) これはtheme関数群というものの一つで他にtheme_grayやtheme_classicというのがあり、グラフの見た目を変えることができます。グラフ内のフォントを変更することもできます。\nggplot(data.frame(x=c(-3,3))) + aes(x) + stat_function(fun=function(x) sinh(x)) + coord_cartesian(ylim = c(-3,3)) + labs(title = \u0026#34;sinh(x)\u0026#34;) + theme_linedraw(base_family = \u0026#34;Times New Roman\u0026#34;) patchworkパッケージについて このpatchworkパッケージというのを使うことによって複数のグラフを並べて出力することができます。\n上にでは「g1|g2|g3」としていましたが、「g1|(g2/g3)」とすると次のようになります。\nおわりに ということでRで関数のグラフを描きました。+で関数をつなげていくだけで結構きれいなグラフが作れるのはなかなか良いと思います。\n特に1年次は悪しき実験Aでグラフについても厳しく指摘されたりするでしょう。グラフ作成の手段としてRを選択肢に入れてみてはどうでしょうか？\n","permalink":"https://kienn-hcl.github.io/mysite/posts/creategraphinr/","summary":"これは工研ブログリレー2022の10日目の記事です。 9日の記事はもっちゃんさんの電気通信大学で生き残るための序盤の布石です。UECサバイバルでのテクニックが書いてあるのでぜひご一読を。\nさて、私は最近微積分で覚えるといいかもしれない公式などというのを書いたのですが、そこで関数のグラフを描くのにRを使ってみたのでそのことについて書いていこうと思います。なぜRを使ったのかというと、なんとなくです。特に理由はないですね。\n3日目の記事と若干ネタ被りしちゃいました\u0026hellip;ごめんなさい\u0026hellip;\nちなみに筆者はR初心者なので何か間違ってることなどがあったらTwitterなどで連絡してくださるとうれしいです。\nやったことの要約 Rと統合開発環境であるRStudioはインストール済みであることを想定しています。 RStudio上で以下を入力していく。\ninstall.packages(\u0026#34;tidyverse\u0026#34;) #以前一回でも実行したことがあるのなら不要 library(ggplot2) #library(tidyverse) でもよい library(patchwork) #複数のグラフを並べて表示する用  g1 \u0026lt;- ggplot(data.frame(x=c(-3,3))) + aes(x) + stat_function(fun=function(x) sinh(x)) + coord_cartesian(ylim = c(-3,3)) + labs(title = \u0026#34;sinh(x)\u0026#34;) + theme_linedraw(base_family = \u0026#34;Times New Roman\u0026#34;) g2 \u0026lt;- ggplot(data.frame(x=c(-3,3))) + aes(x) + stat_function(fun=function(x) cosh(x)) + coord_cartesian(ylim = c(0,6)) + labs(title = \u0026#34;cosh(x)\u0026#34;) + theme_linedraw(base_family = \u0026#34;Times New Roman\u0026#34;) g3 \u0026lt;- ggplot(data.frame(x=c(-3,3))) + aes(x) + stat_function(fun=function(x) tanh(x)) + coord_cartesian(ylim = c(-3,3)) + labs(title = \u0026#34;tanh(x)\u0026#34;) + theme_linedraw(base_family = \u0026#34;Times New Roman\u0026#34;)  g1|g2|g3 ※そのままでも問題ないかもしれませんが、グラフの表示のためにRStudioのメニューから「Tools」→「Global Options」を押して「General」内の「Graphics」でBacendをAGGにしておくとよいかもしれません。","title":"Rで関数のグラフを作った話"},{"content":"私が微分積分学での中間試験で覚えといて役に立ったものをメモとして残しときます。\n間違いがあるかもしれないので各自の責任で持ってご活用ください。また、もし間違いを見つけた人がいたら私のtwitterなどに連絡をくれるとありがたいです。\n $$(x^x)^{\\prime} = x^x(\\log x +1)\\\\[22pt]$$\n$$ \\begin{align*} (\\sin^{-1} x)^{\\prime} \u0026amp;= \\frac{1}{\\sqrt{1-x^2}}\\\\[11pt] (\\cos^{-1} x)^{\\prime} \u0026amp;= -\\frac{1}{\\sqrt{1-x^2}}\\\\[11pt] (\\tan^{-1} x)^{\\prime} \u0026amp;= \\frac{1}{1+x^2} \\end{align*} $$\n $$\\cos(\\sin^{-1} x) = \\sin(\\cos^{-1} x) = \\sqrt{1-x^2}$$\n$$\\tan(\\sin^{-1} x) = \\frac{\\sin(\\sin^{-1} x)}{\\cos(\\sin^{-1} x)} = \\frac{x}{\\sqrt{1-x^2}}$$\n$$\\tan(\\cos^{-1} x) = \\frac{\\sin(\\cos^{-1} x)}{\\cos(\\cos^{-1} x)} = \\frac{\\sqrt{1-x^2}}{x}$$\n $$\\cos(\\tan^{-1} x)=\\frac{1}{\\sqrt{1+x^2}}$$\n$$\\sin(\\tan^{-1} x) = \\tan(\\tan^{-1} x) \\cdot \\cos(\\tan^{-1} x) = \\frac{x}{\\sqrt{1+x^2}}$$\n $$(\\tan x)^{\\prime} = \\frac{1}{\\cos^2 x}$$\n$$\\left(\\frac{1}{\\tan x}\\right)^{\\prime} = -\\frac{1}{\\sin^2 x}$$\n $$ \\begin{align*} \\sinh x \u0026amp;= \\frac{e^x - e^{-x}}{2}\\\\[11pt] \\cosh x \u0026amp;= \\frac{e^x + e^{-x}}{2}\\\\[11pt] \\tanh x \u0026amp;= \\frac{\\sinh x}{\\cosh x}\\\\[22pt] \\end{align*} $$\n$$ \\begin{align*} (\\sinh x)^{\\prime} \u0026amp;= \\cosh x\\\\[11pt] (\\cosh x)^{\\prime} \u0026amp;= \\sinh x\\\\[11pt] (\\tanh x)^{\\prime} \u0026amp;= \\frac{1}{\\cosh^2 x}\\\\[22pt] \\end{align*} $$\n$$\\cosh^2 x - \\sinh^2 x = 1$$\n ※座標に注意\n","permalink":"https://kienn-hcl.github.io/mysite/posts/bisekimemo/","summary":"私が微分積分学での中間試験で覚えといて役に立ったものをメモとして残しときます。\n間違いがあるかもしれないので各自の責任で持ってご活用ください。また、もし間違いを見つけた人がいたら私のtwitterなどに連絡をくれるとありがたいです。\n $$(x^x)^{\\prime} = x^x(\\log x +1)\\\\[22pt]$$\n$$ \\begin{align*} (\\sin^{-1} x)^{\\prime} \u0026amp;= \\frac{1}{\\sqrt{1-x^2}}\\\\[11pt] (\\cos^{-1} x)^{\\prime} \u0026amp;= -\\frac{1}{\\sqrt{1-x^2}}\\\\[11pt] (\\tan^{-1} x)^{\\prime} \u0026amp;= \\frac{1}{1+x^2} \\end{align*} $$\n $$\\cos(\\sin^{-1} x) = \\sin(\\cos^{-1} x) = \\sqrt{1-x^2}$$\n$$\\tan(\\sin^{-1} x) = \\frac{\\sin(\\sin^{-1} x)}{\\cos(\\sin^{-1} x)} = \\frac{x}{\\sqrt{1-x^2}}$$\n$$\\tan(\\cos^{-1} x) = \\frac{\\sin(\\cos^{-1} x)}{\\cos(\\cos^{-1} x)} = \\frac{\\sqrt{1-x^2}}{x}$$\n $$\\cos(\\tan^{-1} x)=\\frac{1}{\\sqrt{1+x^2}}$$\n$$\\sin(\\tan^{-1} x) = \\tan(\\tan^{-1} x) \\cdot \\cos(\\tan^{-1} x) = \\frac{x}{\\sqrt{1+x^2}}$$\n $$(\\tan x)^{\\prime} = \\frac{1}{\\cos^2 x}$$\n$$\\left(\\frac{1}{\\tan x}\\right)^{\\prime} = -\\frac{1}{\\sin^2 x}$$","title":"微積分で覚えるといいかもしれない公式など"},{"content":"hugoで$\\LaTeX$での数式が表示されるように設定した時のメモ\nテーマはPaperModでの話です。KaTeXを使用。\n手順 1. /layouts/partials/math.html の作成 /layouts/partials/math.html を作る。math.htmlの中にはAuto-render Extensionのページにある以下のコードを貼り付ける。\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/npm/katex@0.15.3/dist/katex.min.css\u0026#34; integrity=\u0026#34;sha384-KiWOvVjnN8qwAZbuQyWDIbfCLFhLXNETzBQjA/92pIowpC0d2O3nppDGQVgwd2nB\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;script defer src=\u0026#34;https://cdn.jsdelivr.net/npm/katex@0.15.3/dist/katex.min.js\u0026#34; integrity=\u0026#34;sha384-0fdwu/T/EQMsQlrHCCHoH10pkPLlKA1jL5dFyUOvB3lfeT2540/2g6YgSi2BL14p\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script defer src=\u0026#34;https://cdn.jsdelivr.net/npm/katex@0.15.3/dist/contrib/auto-render.min.js\u0026#34; integrity=\u0026#34;sha384-+XBljXPPiv+OzfbB3cVmLHf4hdUFHlWNZN5spNQ7rmHTXpd7WvJum6fIACpNNfIR\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt;  document.addEventListener(\u0026#34;DOMContentLoaded\u0026#34;, function() {  renderMathInElement(document.body, {  // customised options  // • auto-render specific keys, e.g.:  delimiters: [  {left: \u0026#39;$$\u0026#39;, right: \u0026#39;$$\u0026#39;, display: true},  {left: \u0026#39;$\u0026#39;, right: \u0026#39;$\u0026#39;, display: false},  {left: \u0026#39;\\\\(\u0026#39;, right: \u0026#39;\\\\)\u0026#39;, display: false},  {left: \u0026#39;\\\\[\u0026#39;, right: \u0026#39;\\\\]\u0026#39;, display: true}  ],  // • rendering keys, e.g.:  throwOnError : false  });  }); \u0026lt;/script\u0026gt; 2. /layouts/partials/extend_head.htmlに追記 /layouts/partials/extend_head.htmlに以下を追記（extend_head.htmlファイルがない場合は作成）\n{{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} 3. math: trueにする config.yml内のparams部分にmath: trueを追加。\n個別の記事ごとに設定したい場合は各mdファイル一番上のtitle: などがある部分にmath: trueを追加。\n例 Block: $$e^x=\\sum_{k = 0}^{\\infty} \\frac{x^k}{k!}$$  Inline: $e^x=\\sum_{k = 0}^{\\infty} \\frac{x^k}{k!}$ Block: $$e^x=\\sum_{k = 0}^{\\infty} \\frac{x^k}{k!}$$\nInline: $e^x=\\sum_{k = 0}^{\\infty} \\frac{x^k}{k!}$\n参考ページ Math Typesetting\n","permalink":"https://kienn-hcl.github.io/mysite/posts/latex_hugo/","summary":"hugoで$\\LaTeX$での数式が表示されるように設定した時のメモ\nテーマはPaperModでの話です。KaTeXを使用。\n手順 1. /layouts/partials/math.html の作成 /layouts/partials/math.html を作る。math.htmlの中にはAuto-render Extensionのページにある以下のコードを貼り付ける。\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/npm/katex@0.15.3/dist/katex.min.css\u0026#34; integrity=\u0026#34;sha384-KiWOvVjnN8qwAZbuQyWDIbfCLFhLXNETzBQjA/92pIowpC0d2O3nppDGQVgwd2nB\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;script defer src=\u0026#34;https://cdn.jsdelivr.net/npm/katex@0.15.3/dist/katex.min.js\u0026#34; integrity=\u0026#34;sha384-0fdwu/T/EQMsQlrHCCHoH10pkPLlKA1jL5dFyUOvB3lfeT2540/2g6YgSi2BL14p\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script defer src=\u0026#34;https://cdn.jsdelivr.net/npm/katex@0.15.3/dist/contrib/auto-render.min.js\u0026#34; integrity=\u0026#34;sha384-+XBljXPPiv+OzfbB3cVmLHf4hdUFHlWNZN5spNQ7rmHTXpd7WvJum6fIACpNNfIR\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt;  document.addEventListener(\u0026#34;DOMContentLoaded\u0026#34;, function() {  renderMathInElement(document.body, {  // customised options  // • auto-render specific keys, e.g.:  delimiters: [  {left: \u0026#39;$$\u0026#39;, right: \u0026#39;$$\u0026#39;, display: true},  {left: \u0026#39;$\u0026#39;, right: \u0026#39;$\u0026#39;, display: false},  {left: \u0026#39;\\\\(\u0026#39;, right: \u0026#39;\\\\)\u0026#39;, display: false},  {left: \u0026#39;\\\\[\u0026#39;, right: \u0026#39;\\\\]\u0026#39;, display: true}  ],  // • rendering keys, e.","title":"hugoで$\\LaTeX$表示できるようにした備忘録"},{"content":"vimiumって？ 皆さん、vimiumを知っていますか？\nvimiumはテキストエディタvimのキーバインドでブラウザを操作できるブラウザアドオンです。キーボードでブラウザを操作できるのでキーボードからマウスへ手を動かすという手間を減らすことができます。\nvimといえばエディタ戦争で有名で何かと敷居が高いと感じるかもしれません。\nしかし、vimについてよく知ってなかった私でも使ってて便利だと感じたので非vimmerの方にもオススメです。\nブラウザアドオンなので導入もストアから入手するだけなのでとっても簡単です。\n便利だと思った機能 vimiumの詳細な使い方はググればいろいろな方が説明してくれています。\nなのでここでは私が使ってみて便利だと思った、\n (f/F) リンクを開く (o/O) 履歴、ブックマークから検索してページを開く (b/B) 履歴、ブックマークから検索してページを開く (T) 現在開いてるタブの検索  について紹介していきます。\n(f/F) リンクを開く 開いているページ中でfキーを押すと次のような画面になります。\nここで表示されたアルファベットはクリックできる場所を表しており、アルファベットを入力すると対応したリンクを開くことができます。\nShiftキーを押しながらf（つまりF）キーを押した場合は新しいタブで開いてくれます。\n(o/O) 履歴、ブックマークから検索してページを開く oキーを押すと検索ボックスみたいなのが出てきます。そこに文字をうっていくと履歴とブックマークから検索でき、開きたい検索結果を選択するとそのページを開けます。\nこれもShiftキーを押しながらo（つまりO）キーを押した場合は新しいタブで開いてくれます。\n(b/B) 履歴、ブックマークから検索してページを開く o/Oキーとほぼ同じ。こっちはブックマークのみから検索してくれます。\n(T) 現在開いてるタブの検索 現在開いてるタブを一覧表示、検索できます。\nおわりに このほかにもいろいろなキーバインドがあり、?キーを押すとヘルプを見ることができます。\nまた、githubのreadmeを見てみるとヘルプにはのってないキーバインドがあったりします。慣れてきたら見てみると面白いかもしれません。\nこのvimiumをきっかけに本家vimのキーバインドに興味が出てくる人が出てくれると嬉しい限りです。（すでにVScodeを使っている人でもvimのキーバインドを使えるようにする拡張機能がありますよ）\nそれではよきvimライフを。\n","permalink":"https://kienn-hcl.github.io/mysite/posts/vimium/","summary":"vimiumって？ 皆さん、vimiumを知っていますか？\nvimiumはテキストエディタvimのキーバインドでブラウザを操作できるブラウザアドオンです。キーボードでブラウザを操作できるのでキーボードからマウスへ手を動かすという手間を減らすことができます。\nvimといえばエディタ戦争で有名で何かと敷居が高いと感じるかもしれません。\nしかし、vimについてよく知ってなかった私でも使ってて便利だと感じたので非vimmerの方にもオススメです。\nブラウザアドオンなので導入もストアから入手するだけなのでとっても簡単です。\n便利だと思った機能 vimiumの詳細な使い方はググればいろいろな方が説明してくれています。\nなのでここでは私が使ってみて便利だと思った、\n (f/F) リンクを開く (o/O) 履歴、ブックマークから検索してページを開く (b/B) 履歴、ブックマークから検索してページを開く (T) 現在開いてるタブの検索  について紹介していきます。\n(f/F) リンクを開く 開いているページ中でfキーを押すと次のような画面になります。\nここで表示されたアルファベットはクリックできる場所を表しており、アルファベットを入力すると対応したリンクを開くことができます。\nShiftキーを押しながらf（つまりF）キーを押した場合は新しいタブで開いてくれます。\n(o/O) 履歴、ブックマークから検索してページを開く oキーを押すと検索ボックスみたいなのが出てきます。そこに文字をうっていくと履歴とブックマークから検索でき、開きたい検索結果を選択するとそのページを開けます。\nこれもShiftキーを押しながらo（つまりO）キーを押した場合は新しいタブで開いてくれます。\n(b/B) 履歴、ブックマークから検索してページを開く o/Oキーとほぼ同じ。こっちはブックマークのみから検索してくれます。\n(T) 現在開いてるタブの検索 現在開いてるタブを一覧表示、検索できます。\nおわりに このほかにもいろいろなキーバインドがあり、?キーを押すとヘルプを見ることができます。\nまた、githubのreadmeを見てみるとヘルプにはのってないキーバインドがあったりします。慣れてきたら見てみると面白いかもしれません。\nこのvimiumをきっかけに本家vimのキーバインドに興味が出てくる人が出てくれると嬉しい限りです。（すでにVScodeを使っている人でもvimのキーバインドを使えるようにする拡張機能がありますよ）\nそれではよきvimライフを。","title":"Vimiumのすすめ"},{"content":"スライド  powerline-goの導入  ","permalink":"https://kienn-hcl.github.io/mysite/posts/slide/","summary":"スライド  powerline-goの導入  ","title":"スライド置き場"}]